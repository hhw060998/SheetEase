using System.Collections.Generic;
using Newtonsoft.Json;


namespace Data.TableScript
{
	/// <summary> This is auto-generated, don't modify manually </summary>
	public class SampleCombinedKeyInfo : IConfigRawInfo
	{
		/// <summary>
		/// 编号: 组合key仅支持int类型，且不能超过46340
		/// </summary>
		[JsonProperty("id")]
		public int id { get; private set; }
		
		/// <summary>
		/// 字符串类型
		/// </summary>
		[JsonProperty("group")]
		public int group { get; private set; }
		
		/// <summary>
		/// 整型
		/// </summary>
		[JsonProperty("damage")]
		public int damage { get; private set; }
		
		/// <summary>
		/// 浮点型
		/// </summary>
		[JsonProperty("damage_increase")]
		public float damage_increase { get; private set; }
		
		/// <summary>
		/// 字符串列表
		/// </summary>
		[JsonProperty("attr_names")]
		public List<string> attr_names { get; private set; }
		
		/// <summary>
		/// 整型列表
		/// </summary>
		[JsonProperty("attr_values")]
		public List<int> attr_values { get; private set; }
		
		/// <summary>
		/// 浮点数列表
		/// </summary>
		[JsonProperty("float_values")]
		public List<float> float_values { get; private set; }
		
		/// <summary>
		/// 字典-整型:字符串
		/// </summary>
		[JsonProperty("dict_values1")]
		public Dictionary<int,string> dict_values1 { get; private set; }
		
		/// <summary>
		/// 字典-字符串:浮点
		/// </summary>
		[JsonProperty("dict_values2")]
		public Dictionary<string,float> dict_values2 { get; private set; }
		
		/// <summary> Auto-added to satisfy IConfigRawInfo </summary>
		[JsonProperty("name")]
		public string name { get; private set; }
	}
	
	public class SampleCombinedKeyConfig : ConfigDataWithCompositeId<SampleCombinedKeyInfo>
	{
		// Config data class for SampleCombinedKey. Generated by tool.
		
		// Query methods are provided by ConfigData manager; keep this class minimal.
		
		protected override int CompositeMultiplier => 46340;
	}
}